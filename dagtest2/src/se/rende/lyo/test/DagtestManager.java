/*******************************************************************************
 * Copyright (c) 2011, 2012 IBM Corporation and others.
 *
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 *  
 *  The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 *  and the Eclipse Distribution License is available at
 *  http://www.eclipse.org/org/documents/edl-v10.php.
 *  
 *  Contributors:
 *  
 *	   Sam Padgett	       - initial API and implementation
 *     Michael Fiedler     - adapted for OSLC4J
 *     Jad El-khoury        - initial implementation of code generator (https://bugs.eclipse.org/bugs/show_bug.cgi?id=422448)
 *     Matthieu Helleboid   - Support for multiple Service Providers.
 *     Anass Radouani       - Support for multiple Service Providers.
 *
 * This file is generated by org.eclipse.lyo.oslc4j.codegenerator
 *******************************************************************************/

package se.rende.lyo.test;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.ServletContextEvent;
import java.util.List;

import org.eclipse.lyo.oslc4j.core.model.ServiceProvider;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import se.rende.lyo.test.servlet.ServiceProviderCatalogSingleton;

import se.rende.lyo.test.ServiceProviderInfo;
import se.rende.lyo.test.resources.Moj;

// Start of user code imports
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletContextEvent;
import javax.servlet.http.HttpServletRequest;

import se.rende.lyo.test.resources.Moj;
// End of user code

// Start of user code pre_class_code
// End of user code

public class DagtestManager {

	// Start of user code class_attributes
	public static List<Moj> mojs = new ArrayList<Moj>();

	// End of user code
	
	// Start of user code class_methods
	// End of user code

    public static void contextInitializeServletListener(final ServletContextEvent servletContextEvent)
    {
		// TODO Implement code to establish connection to data backbone etc ...
		// Start of user code contextInitializeServletListener
		// End of user code
    }

	public static void contextDestroyServletListener(ServletContextEvent servletContextEvent) 
	{
		// TODO Implement code to shutdown connections to data backbone etc...
		// Start of user code contextDestroyed
		// End of user code
	}

    public static ServiceProviderInfo[] getServiceProviderInfos(HttpServletRequest httpServletRequest)
    {
		ServiceProviderInfo[] serviceProviderInfos = {};
		// TODO Implement code to return the set of ServiceProviders
		// Start of user code "ServiceProviderInfo[] getServiceProviderInfos(...)"
		ServiceProviderInfo serviceProviderInfo = new ServiceProviderInfo();
		serviceProviderInfo.name = "a name";
		serviceProviderInfo.serviceProviderId = "0";
		
		serviceProviderInfos = new ServiceProviderInfo[] {serviceProviderInfo};
		// End of user code
		return serviceProviderInfos;
    }

    public static List<Moj> queryMojs(HttpServletRequest httpServletRequest, final String serviceProviderId, String where, int page, int limit)
    {
		List<Moj> resources = null;
		// TODO Implement code to return a set of resources
		
		// Start of user code queryMojs
		resources = new ArrayList<Moj>(mojs);
		// End of user code
		return resources;
    }
	public static List<Moj> MojSelector(HttpServletRequest httpServletRequest, final String serviceProviderId, String terms)   
    {
		List<Moj> resources = null;
		// TODO Implement code to return a set of resources, based on search criteria 
		
		// Start of user code MojSelector
		resources = new ArrayList<Moj>(mojs);
		// End of user code
		return resources;
    }
	public static Moj createMoj(HttpServletRequest httpServletRequest, final Moj aResource, final String serviceProviderId)
    {
		Moj newResource = null;
		// TODO Implement code to create a resource
		
		// Start of user code createMoj
		try {
			newResource = new Moj(serviceProviderId, Integer.toString(mojs.size()));
		} catch (URISyntaxException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		mojs.add(newResource);
		// End of user code
		return newResource;
    }

	public static String getETagFromMoj(final Moj aResource)
    {
		String eTag = null;
		// TODO Implement code to return an ETag for a particular resource
		// Start of user code getETagFromMoj
		// End of user code
		return eTag;
    }
	public static Moj getMoj(HttpServletRequest httpServletRequest, final String serviceProviderId, final String mojId)
    {
		Moj aResource = null;
		// TODO Implement code to return a resource
		
		// Start of user code getMoj
		aResource = mojs.get(Integer.parseInt(mojId));
		// End of user code
		return aResource;
    }
}
